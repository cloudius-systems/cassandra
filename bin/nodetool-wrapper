#!/bin/bash
#
# Copyright (C) 2023-present ScyllaDB
#

#
# SPDX-License-Identifier: AGPL-3.0-or-later
#

SCRIPT_PATH=$(dirname $(realpath "$0"))

# nodetool is installed to $prefix/share/cassandra/bin, while scylla to $prefix/bin
SCYLLA_PATH="$SCRIPT_PATH"/../../../bin/scylla
NODETOOL_PATH=$(realpath "$SCRIPT_PATH"/nodetool-java)

# Fall-back to java nodetool, if the tool-java package is installed, but the
# scylla-server one isn't.
if [[ ! -f "$SCYLLA_PATH" ]]
then
    exec "$NODETOOL_PATH" "$@"
fi

SCYLLA_PATH=$(realpath "$SCYLLA_PATH")

function get_help_opt() {
    local help_opt="--help"
    for opt in "$@"; do
        # if "--help" is already in the command line, no need to added it for
        # checking scylla-nodetool implements the given command.
        if [ "$opt" = "$help_opt" ]; then
            help_opt=""
            break
        fi
    done
    echo "$help_opt"
}

function get_api_port() {
    local api_port=10000
    for opt in "$@"; do
        # if -Dcom.scylladb.apiPort=<num> exists in the command line options,
        # override the "-p" option with "<num>"
        if [[ "$opt" =~ ^-Dcom.scylladb.apiPort= ]]; then
            api_port=${opt#*=}
        fi
    done
    echo "$api_port"
}

function override_port_option() {
    local api_port=$1
    shift
    local new_args=()
    # override the -p or --port option with the $api_port
    # api_port is 10000 by default

    while [ "$#" -gt 0 ]; do
        case "$1" in
            -Dcom.scylladb.apiPort=*)
                # swallow it
                shift
                ;;
            -p|--port)
                # override the argument
                new_args+=("$1")
                new_args+=("$api_port")
                shift 2
                ;;
            *)
                new_args+=("$1")
                shift
                ;;
        esac
    done
    echo "${new_args[@]}"
}

# Requesting the help for a command will fail with a distinct error code (100)
# if the command doesn't exist. Thus we can use the exit code to check whether
# scylla-nodetool implements a given command or not, and therefore, dispatch
# the request to the appropriate nodetool variant.


help_opt=$(get_help_opt "$@")
"$SCYLLA_PATH" nodetool "$@" $help_opt &>/dev/null

if [[ $? -eq 100 ]]
then
    exec "$NODETOOL_PATH" "$@"
else
    api_port=$(get_api_port "$@")
    exec "$SCYLLA_PATH" nodetool $(override_port_option "$api_port" "$@")
fi
